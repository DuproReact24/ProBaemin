generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model foods {
  id            Int             @id @default(autoincrement())
  menu_id       Int
  name          String          @db.VarChar(255)
  price         Decimal         @db.Decimal(10, 2)
  description   String?
  image         String?         @db.VarChar(200)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  menus         menus           @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_details order_details[]
}

model menus {
  id            Int         @id @default(autoincrement())
  restaurant_id Int
  name          String      @db.VarChar(255)
  description   String?
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  foods         foods[]
  restaurants   restaurants @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_details {
  id         Int       @id @default(autoincrement())
  order_id   Int
  food_id    Int
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  total      Decimal   @db.Decimal(10, 2)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  foods      foods     @relation(fields: [food_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders     orders    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  id            Int             @id @default(autoincrement())
  user_id       Int
  restaurant_id Int
  total         Int
  total_price   Decimal         @default(0) @db.Decimal(10, 2)
  status        String?         @default("Pending") @db.VarChar(50)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  order_details order_details[]
  restaurants   restaurants     @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model restaurants {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  address    String?
  phone      String?   @db.VarChar(20)
  image      String?   @db.VarChar(200)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  menus      menus[]
  orders     orders[]
}

model users {
  id         Int       @id @default(autoincrement())
  full_name  String    @db.VarChar(255)
  email      String    @unique @db.VarChar(255)
  phone      String?   @db.VarChar(20)
  address    String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  password   String
  orders     orders[]
}
